# IMPORTS

# Discord api
import discord
from discord import ui
from discord.enums import ButtonStyle
from discord.ext import tasks
from discord.commands.context import ApplicationContext

# Standard modules
import random
from datetime import date, datetime
from math import ceil, floor
from os import getenv

# Other
from RandomWordGenerator import RandomWord
from text_to_speech import speak
from langdetect import detect
from pytube import Channel
from feedparser import parse

# DATA

# Variables
rw = RandomWord(50,
                constant_word_size=False,
                include_digits=False,
                special_chars=r"",
                include_special_chars=False) # Barsik generator
i = 1 # Needed for task

client = discord.Bot(intents=discord.Intents.all()) # Discord client

# Constants
VERSION = '1.1.2' # Version
DONBASS_ID = 764470795967528971 # Discord server id
GUILDS = (DONBASS_ID, 764838645374648350)

COMMANDS = {"ping":"Pong!", 
    'donbass':'–•–≤–∞–ª–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –¥–æ–Ω–±–∞—Å—Å–æ–≤—Ü–∞', 
    'logo':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç –ª–æ–≥–æ',
    'catboy (—Ç–µ–∫—Å—Ç)':'–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∫–µ—Ç–±–æ–π—Å–∫–∏–π',
    'avatar [–Ω–∏–∫]':'–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à –∞–≤–∞—Ç–∞—Ä, –∏–ª–∏ –∞–≤–∞—Ç–∞—Ä –ª—é–±–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞',
    'rate (–≤–µ—â—å –¥–ª—è –æ—Ü–µ–Ω–∫–∏)':'–û—Ü–µ–Ω–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç (–¥–ª—è #–æ–±–∑–æ—Ä—ã)',
    'goroskop':'–ü–æ–ª—É—á–∏ –≥–æ—Ä–æ—Å–∫–æ–ø –æ—Ç —Å–∞–º–æ–≥–æ –ö–≤–∞—Ä–µ—Ü–∞!',
    'hype':'–í–≤–æ–¥–∏—Ç–µ –∫–æ–≥–¥–∞ POGCHAMP',
    'hymn':'–ü–∞, –ø–∞—Ä–∞ –ø–∞ –ø–∞ –ø–∞–º –ø–∞ –ø–∞—Ä–∞—Ä–∞–º...',
    'like (–≤–µ—â—å)':'–õ—é–±–∏—Ç—å (–¥–ª—è #–æ–±–æ–∂–∞—é___)',
    'hate (–≤–µ—â—å)':'–ù–µ–Ω–∞–≤–∏–¥–∏—Ç—å (–¥–ª—è #–Ω–µ–Ω–∞–≤–∏–∂—É___)',
    'gm': '–° –î–û–ë–†–´–ú –£–¢–†–û–ú –î–û–ù–ë–ê–ê–ê–ê–ê–ê–ê-',
    'barsik':f'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç "{rw.generate()}"',
    'emoji (–∫–∞—Å—Ç–æ–º–Ω–æ–µ —ç–º–æ–¥–∂–∏)':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç –µ–º–æ–¥–∂–∏ –≤ –ø–Ω–≥ —Ñ–æ—Ä–º–∞—Ç–µ',
    'say (—Å–æ–æ–±—â–µ–Ω–∏–µ)':'–ü–æ–¥—á–∏–Ω—è–µ—Ç –≤–∞–º –≤ —Ä–∞–±—ã –º–æ–µ–≥–æ –±–æ—Ç–∞',
    'tts (—Ç–µ–∫—Å—Ç)':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç —Ç—É —Å–ø–∏—á',
    'latest (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞{g_cat/quarez})':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–µ–æ',
    'tarot':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–∞—Ä—Ç—É —Ç–∞—Ä–æ',
    'anekdot':'–ü—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π –∞–Ω–µ–∫ –∏–∑ –∫–∞–Ω–∞–ª–∞ #–∞–Ω–µ–∫–¥–æ—Ç—ã-–∏-–ø–∞—Å—Ç—ã',
    'frog':'—Ñ—Ä–æ–≥–≥–µ',
    'help [—Å—Ç—Ä–∞–Ω–∏—Ü–∞]':'–í—ã –∑–¥–µ—Å—å'} # Command list

COMMANDS2 = {} # Command list without options
for key, value in zip(COMMANDS.keys(), COMMANDS.values()): COMMANDS2[key.split(' ')[0]] = value

# EVENTS

@client.event
async def on_ready(): # On login
    donbass = client.get_guild(764470795967528971)
    aneki = donbass.get_channel(775834036735049748)
    print(await aneki.create_invite())

    print(f'\nLogged in as {client.user}\n')
    change_status.start()
    # death.start()

@client.event
async def on_member_join(member:discord.Member): # Greet member
    global DONBASS_ID

    newbed = discord.Embed(title=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.name}!', description='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –î–æ–Ω–±–∞—Å—Å-54. –°–∞–º–∏ –≤—ã –µ–≥–æ –≤—ã–±—Ä–∞–ª–∏, –∏–ª–∏ –µ–≥–æ –≤—ã–±—Ä–∞–ª–∏ –∑–∞ –≤–∞—Å ‚Äî —ç—Ç–æ –ª—É—á—à–∏–π —Å–µ—Ä–≤–µ—Ä –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è. –Ø —Ç–∞–∫–æ–≥–æ –≤—ã—Å–æ–∫–æ–≥–æ –º–Ω–µ–Ω–∏—è –æ –î–æ–Ω–±–∞—Å—Å–µ-54, —á—Ç–æ —Ä–µ—à–∏–ª —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–¥–µ—Å—å, –≤ –ë–∏–±–ª–∏–æ—Ç–µ–∫–µ, —Å—Ç–æ–ª—å –∑–∞–±–æ—Ç–ª–∏–≤–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –Ω–∞—à–∏–º–∏ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏. –Ø –≥–æ—Ä–∂—É—Å—å —Ç–µ–º, —á—Ç–æ –Ω–∞–∑—ã–≤–∞—é –î–æ–Ω–±–∞—Å—Å-54 —Å–≤–æ–∏–º –¥–æ–º–æ–º. –ò—Ç–∞–∫, —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ª–∏ –≤—ã –æ—Å—Ç–∞—Ç—å—Å—è –∑–¥–µ—Å—å, –∏–ª–∏ –∂–µ –≤–∞—Å –∂–¥—É—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–∞–ª–∏, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –î–æ–Ω–±–∞—Å—Å-54. –ó–¥–µ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ.', color=discord.Color.dark_blue())
    newbed.set_image(url = member.avatar)

    if member.guild.id == DONBASS_ID:
        await client.get_channel(764470796776767510).send(embed=newbed)

# Send avatar when changed (for users)
@client.event
async def on_user_update(before:discord.User, after:discord.User):
    if not before.avatar:
        Avabed = discord.Embed(title=f'{before.name} –ø–æ–º–µ–Ω—è–ª –∞–≤—É:', color=discord.Color.dark_gold())
        Avabed.set_image(url=after.avatar.url)

        await client.get_channel(817070462273060926).send(embed=Avabed)

# Join thread when created
@client.event
async def on_thread_join(thread:discord.Thread): await thread.join()

@client.event
async def on_message(message:discord.Message):
    if any(word in message.content.lower() for word in ('d54', 'd-54', '–¥54', '–¥-54')): # D-54 reaction
        if not message.author.bot: await message.add_reaction("<:d54:859494896112631828>")
    if ('@everyone' in message.content) or ('@here' in message.content): await message.channel.send("stfu") # @everyone reaction

# Button reaction
@client.event
async def on_interaction(ctx : discord.Interaction):
    try:
        buttonid = ctx.data['custom_id']

        if 'page' in buttonid: # Help page change
            await help2(ctx, page=int(buttonid.split(' ')[1]))
    except KeyError: pass

    await client.process_application_commands(ctx)

# TASKS

@tasks.loop(seconds=5)
async def change_status(): # Change status every 5 secs
    global i
    msg = '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä–î–æ–Ω–±–∞—Å—Å‚†Ä54!‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä'

    await client.change_presence(activity=discord.Game(msg[i - 1:i + 10]))
    if i!=len(msg) - 10: i += 1
    else: i=1

@tasks.loop(seconds=1)
async def death(): # Change death msg every 1 sec
    msg = await client.get_channel(764475455033835560).fetch_message(1013402634645930095)
    time = datetime.fromisoformat('2022-11-28') - datetime.now()
    await msg.edit(embed=discord.Embed(title=f"ü™¶ {(f'{time.days} –¥–Ω–µ–π, {floor(time.seconds/3600)} —á–∞—Å–æ–≤, {floor(time.seconds/60)%60} –º–∏–Ω—É—Ç, {time.seconds%60} —Å–µ–∫—É–Ω–¥')}", description="...–¥–æ —Ç–æ–≥–æ –∫–∞–∫ —è —É–º—Ä—É" , color=discord.Colour.dark_gray()))

# INFO COMMANDS

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['help'])
async def help(ctx:ApplicationContext, page:int=1): # Help command
    global COMMANDS

    helpbed = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã", description = "—ç—Ç–æ –≤—Å—è –ø–æ–º–æ—â—å –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –Ω—É–∂–Ω–∞", color=discord.Colour.from_rgb(51, 168, 255))
    helpbed.set_thumbnail(url = client.user.avatar)
    helpbed.set_footer(text=f'() - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, [] - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {page}/{ceil(len(tuple(COMMANDS.keys()))/5)}, –¥–ª—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - info.')

    # Page managment
    if page==1: view = ui.View(ui.Button(emoji='‚ñ∂Ô∏è', label='–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page+1}'))
    elif page==ceil(len(tuple(COMMANDS.keys()))/5): view = ui.View(ui.Button(emoji='‚óÄÔ∏è', label='–ü—Ä–æ—à–ª–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page-1}'))
    else: view = ui.View(ui.Button(emoji='‚óÄÔ∏è', label='–ü—Ä–æ—à–ª–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page-1}'), ui.Button(emoji='‚ñ∂Ô∏è', label='–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page+1}'))

    page -= 1
    if (pageitems := tuple(COMMANDS.keys())[page*5:page*5+5]) and page >= 0: # Pages
        for item in pageitems: helpbed.add_field(name=item, value=COMMANDS[item])

        await ctx.respond(embed=helpbed, view=view)

# Second help for buttons (slightly changed)
async def help2(ctx:discord.Interaction, page:int): # Help command
    global COMMANDS

    helpbed = discord.Embed(title="–ö–æ–º–∞–Ω–¥—ã", description = "—ç—Ç–æ –≤—Å—è –ø–æ–º–æ—â—å –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –Ω—É–∂–Ω–∞", color=discord.Colour.from_rgb(51, 168, 255))
    helpbed.set_thumbnail(url = client.user.avatar)
    helpbed.set_footer(text=f'() - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, [] - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {page}/{ceil(len(tuple(COMMANDS.keys()))/5)}, –¥–ª—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - info.')

    # Page managment
    if page==1: view = ui.View(ui.Button(emoji='‚ñ∂Ô∏è', label='–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page+1}'))
    elif page==ceil(len(tuple(COMMANDS.keys()))/5): view = ui.View(ui.Button(emoji='‚óÄÔ∏è', label='–ü—Ä–æ—à–ª–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page-1}'))
    else: view = ui.View(ui.Button(emoji='‚óÄÔ∏è', label='–ü—Ä–æ—à–ª–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page-1}'), ui.Button(emoji='‚ñ∂Ô∏è', label='–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', style=ButtonStyle.blurple, custom_id=f'page {page+1}'))

    page -= 1
    if (pageitems := tuple(COMMANDS.keys())[page*5:page*5+5]) and page >= 0: # Pages
        for item in pageitems: helpbed.add_field(name=item, value=COMMANDS[item])

        await ctx.edit_original_message(embed=helpbed, view=view)

@client.slash_command(guild_ids=GUILDS, description='–î-54 –∏—Å —Ö—É?')
async def info(ctx:ApplicationContext): # Info command
    global VERSION

    splashes = ('–î–æ–Ω–±–∞—Å—Å 54 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç!',
                '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å!',
                '–ü–µ—Ä–≤—ã–º –∂–∏–≤–æ—Ç–Ω—ã–º –±—ã–ª –º–µ–ª–≤—É—à!',
                '–§–∞–Ω —Ñ–∞–∫—Ç: –ª–∏—Ç–≤–∞ —Å–æ—Å–∞—Ç',
                '–ò–ò –∫–æ–º–∏–Ω–≥ —Å—É–Ω?',
                '1.2 –∫–æ–º–∏–Ω–≥ —Å—É–Ω?',
                '2.0 –∫–æ–º–∏–Ω–≥ —Å—É–Ω?',
                '<:micro_yoba:7778468225710817>',
                f'–ö–∞–∫ –±–∞—Ä—Å–∏–∫ –æ–¥–∏–Ω —Ä–∞–∑ —Å–∫–∞–∑–∞–ª: "{rw.generate()}"!',
                f'–≠—Ç–æ—Ç —Å–ø–ª–µ—à –ø–æ—Å–≤—è—â–∞–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫—É –ø–æ –∏–º–µ–Ω–∏ {ctx.author.name}!')
    infobed = discord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ', description=random.choice(splashes), color=discord.Colour.from_rgb(random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
    infobed.add_field(name='–ê–≤—Ç–æ—Ä', value='G_cat#2267')
    infobed.add_field(name='–°–¥–µ–ª–∞–Ω–æ –¥–ª—è', value='–î–æ–Ω–±–∞—Å—Å–∞54')
    infobed.set_footer(text=f'–ü—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ - /. –í–µ—Ä—Å–∏—è –±–æ—Ç–∞ {VERSION}')
    infobed.set_thumbnail(url = 'https://media.discordapp.net/attachments/764470796776767510/816730419314950184/e16a9c7a83dec0bc.png')
    await ctx.respond(embed=infobed)

# COMMANDS
# No comments here because most is self-explanatory

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['ping'])
async def ping(ctx:ApplicationContext): await ctx.respond(f'Pong!!! {round(client.latency * 1000)} ms')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['logo'])
async def logo(ctx:ApplicationContext): await ctx.respond('https://cdn.discordapp.com/attachments/764470796776767510/883005037658374195/Donbass54_logo.jpg')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['catboy'])
async def catboy(ctx : ApplicationContext, *, text : str): await ctx.respond(f'{text.replace("–≤", "w").replace("—Ä", "w").replace("–í", "W").replace("–†", "W")} {random.choice(("UwU", "OwO", "QwQ"))}')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['avatar'])
async def avatar(ctx:ApplicationContext, member : discord.Member=None):
    if not member: member=ctx.author

    Avabed = discord.Embed(title=f'–ê–≤–∞ {member.name}:', color=discord.Color.dark_gold())
    Avabed.set_image(url=member.avatar.url)

    await ctx.respond(embed=Avabed)

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['rate'])
async def rate(ctx:ApplicationContext, *, thing:str): await ctx.respond(f'{thing} - {random.randint(0,11)}/10')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['goroskop'])
async def goroskop(ctx:ApplicationContext):
	goroskopi = ('–ø—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –≥–æ–ª–æ—Å—É –í–æ–∂–¥—è',
		     '–∑–∞–π–¥–∏ –≤ –°–µ–∫–∞—Å –í–æ–µ—Å',
		     '–ø–æ–∏–≥—Ä–∞–π –≤ –ü–æ—Ä—Ç–∞–ª 2 —Å –ö–∏—Ä—é—à–µ–π',
		     '–Ω–∞–¥–µ–Ω—å –º–µ–π–¥ –∫–æ—Å—Ç—é–º',
		     '–Ω–∞–¥—É–π –∂–æ–ø—É –Ω–∞ —Å—Ç—Ä–∏–º–µ',
		     '–≤—ã–π–¥–∏ –Ω–∞ –¥—É—ç–ª—å —Å –≥–∏–∫–µ—Ç–æ–º',
		     '–æ—Å–∫–æ—Ä–±–∏ –ª–∏—Ç–æ–≤—Ü–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –±–æ—Ç–∞',
		     '–æ—Ü–µ–Ω–∏ –º–æ—é –ø–∏–ø–∏—Å—å–∫—É',
		     '–ø–æ—Ç—Ä–µ–±—É–π –¥–µ–∞–Ω–æ–Ω —É –ö–≤–∞—Ä–µ—Ü–∞',
		     '–≤—ã–π–¥–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ –ª–∏—Ç–≤—ã',
		     '–ª–æ–º–∞–π –º–µ–Ω—è –ø–æ–ª–Ω–æ—Å—Ç—å—é',
		     '–¥—Ä–æ—á–∏ –º–æ–π —Ö—É–π —Å–µ–±–µ –≤ —Ä–æ—Ç, —è –∑–Ω–∞—é —Ç–µ–±–µ —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è UwU OwO~',
		     '—Å–¥–µ–ª–∞–π —Å–µ–±–µ —á–∞–π –∏ –ø–æ–¥–æ–∂–¥–∏ —Å—Ç—Ä–∏–º–∞ –ö–≤–∞—Ä–µ—Ü–∞',
		     '–¥–æ–±–∞–≤—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –≤ –±–æ—Ç–∞',
		     '—Å—Ç–∞–≤—å –ª–∞–π–∫ –µ—Å–ª–∏ –∂–∏–∑–∞)))',
		     '–Ω–µ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Å—è –∫ —Å–æ–≤–µ—Ç–∞–º')
	await ctx.respond(f'–ö–≤–∞—Ä–µ—Ü —Å–æ–≤–µ—Ç—É–µ—Ç —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è: "{random.choice(goroskopi)}"')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['hype'])
async def hype(ctx:ApplicationContext):
    pospogs = ('<:pog:764475422435180604>', '<:skelepog:805744262641483777>', '<:ReptiloPog:801355518379163658>', '<:isaac_pog:853295370737942598>')

    await ctx.send(f'{random.choice(pospogs)}{random.choice(pospogs)}{random.choice(pospogs)}')
    await ctx.delete()

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['hymn'])
async def hymn(ctx:ApplicationContext): await ctx.respond("https://www.youtube.com/watch?v=Z5NaC0L6lq0")

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['like'])
async def like(ctx:ApplicationContext, *, thing:str):
    await ctx.respond (f'<@{ctx.author.id}> –æ–±–æ–∂–∞–µ—Ç {thing}')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['hate'])
async def hate(ctx:ApplicationContext, *, thing:str):
    await ctx.respond (f'<@{ctx.author.id}> –Ω–µ–Ω–∞–≤–∏–¥–∏—Ç {thing}')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['gm'])
async def gm(ctx:ApplicationContext):
    f = parse('https://www.lovethispic.com/rss/Morning%20Nights%20Days')
    await ctx.respond(f['entries'][random.randint(0, len(f['entries']))]['link'])

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['donbass'])
async def donbass(ctx:ApplicationContext):
    praise = ('–≥–µ–Ω–∏–π ',
	     '–º–æ–ª–æ–¥–µ—Ü ',
	     '–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π ',
	     '–∫—Ä–∞—Å–∏–≤—ã–π ',
	     '—É–º–Ω—ã–π ',
	     '—á—ë—Ç–∫–∏–π ',
	     '–Ω–µ-–ª–∏—Ç–æ–≤—Å–∫–∏–π ',
	     '–≤–µ—Ç–µ—Ä–∞–Ω ',
	     '–ø–∞—Ç—Ä–∏–æ—Ç ',
	     '–í–∏–∫—Ç–æ—Ä –°–ª–∏–¥–æ–≤—Å–∫–∏–π ',
	     '–≥–∏–≥–∞–Ω—Ç ',
	     '–∫–µ—Ç–±–æ–π ',
	     '–∞–∫—Ç–∏–≤–Ω—ã–π ',
	     '–Ω–µ-—Ñ—É—Ä—Ä–∏ ',
	     '–£–∫—Å—É—Å147 ',
	     '–º–∞—Å—Ç–µ—Ä ',
	     '–ª—É—á—à–∏–π ',
	     '—Ö–æ—Ä–æ—à–∏–π ',
	     '–Ω–µ–ø–ª–æ—Ö–æ–π ',
	     '–æ–∫–µ–π–Ω—ã–π ',
	     '–≤—ã—Å—à–∏–π ',
	     '–∫—Ä—É—Ç–æ–π ',
	     'Swaggy ',
	     '–Ω–∞–¥—É–≤–Ω–∞—è –∂–æ–ø–∞ ',
	     '–ø–æ–±–µ–¥–∏—Ç–µ–ª—å ',
	     '—É–º–Ω–∏—Ü–∞ ',
	     '—á–µ–ª–æ–≤–µ–∫ ',
	     '–¥–æ–±—Ä—ã–π ',
	     '—Ñ–µ–º–±–æ–π ',
	     '–ì–µ—Ä–æ–π –§—Ä–æ–Ω—Ç–∞ ')
    dobasovei = ('–∫–≤–∞—Ä–µ—Ü',
	      '–∞—à–æ–Ω',
	      '–≥–∏–∫–µ—Ç',
	      '–≤–∏–Ω–≥–∞–ª—Å',
	      '–∫–∏—Ä—é—à–∞',
	      '—à–µ–π–¥–∏–∫',
	      '–µ–±–æ–±–æ',
          '–î-54',
	      '–¥–æ–Ω–±–∞—Å—Å–æ–≤–µ—Ü')
    await ctx.respond(random.choice(praise) + random.choice(dobasovei))

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['barsik'])
async def barsik(ctx:ApplicationContext): await ctx.respond(f'"{rw.generate()}"\n¬© –ë–∞—Ä—Å–∏–∫')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['emoji'])
async def emoji(ctx:ApplicationContext, emoji : discord.Emoji=None):
    if emoji:
        emobed = discord.Embed(title=emoji.name, color=discord.Colour.yellow())
        emobed.set_image(url = emoji.url)
        await ctx.respond(embed=emobed)
    else:
        await ctx.respond('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–º–æ–¥–∂–∏ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã')
        
@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['say'])
async def say(ctx:ApplicationContext, *, text:str): 
    await ctx.send(text)
    await ctx.delete()

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['tts'])
async def tts(ctx:ApplicationContext, *, text : str):
    lang = detect(text)
    if lang=='bg': lang='ru'

    speak(text.replace('\n', ' '), lang, save=True, file="tts.mp3")
    await ctx.respond(file=discord.File(r'tts.mp3'))

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['latest'])
async def latest(ctx:ApplicationContext, name : str):
    name = name.lower()
    channels = {'g_cat': 'https://www.youtube.com/channel/UCOH7EaAnk1HJhbJNPRCVC2g', 'quarez': 'https://www.youtube.com/channel/UC3nP9PKtwfyzJB6EY1t5oSA', 'd54': 'https://www.youtube.com/channel/UC5v5rdL6rGU70kXlxz3sjnw'}

    if name in channels.keys():
        chosen_channel = Channel(list(channels.values())[list(channels.keys()).index(name)])
        await ctx.respond(chosen_channel.video_urls[0])
    else:
        await ctx.respond('–ù–µ–∑–Ω–∞–∫–æ–º—ã–π –∫–∞–Ω–∞–ª')

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['tarot'])
async def tarot(ctx:ApplicationContext):
    cards = (
            'The Fool',
            'The Magician',
            'The High Priestess',
            'The Empress',
            'The Emperor',
            'The Hierophant',
            'The Lovers',
            'The Chariot',
            'Justice',
            'The Hermit',
            'Wheel of Fortune',
            'Strength',
            'The Hanged Man',
            'Death',
            'Temperance',
            'The Devil',
            'The Tower',
            'The Star',
            'The Moon',
            'The Sun',
            'Judgement',
            'The World')
    
    await ctx.respond(f'{random.choice(cards)} ({random.choice(("–æ–±—ã—á–Ω–∞—è", "–ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–∞—è"))})')

# @client.slash_command(guild_ids=GUILDS)
# async def fakeban(ctx:ApplicationContext, user : discord.User, *, reason:str='*–Ω–µ—Ç –ø—Ä–∏—á–∏–Ω—ã*'):
#     await ctx.message.delete()
#     await ctx.respond(embed=discord.Embed(title=f'<:check:886696793423892530> {user.name}#{user.discriminator} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω! –ü—Ä–∏—á–∏–Ω–∞: {reason}', color=discord.Colour.green()))

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['anekdot'])
async def anekdot(ctx:ApplicationContext):
    history = await client.get_channel(775834036735049748).history(limit=200).flatten()

    msg = random.choice(history)
    while len(msg.content) < 100: msg = random.choice(history)

    await ctx.respond(msg.content)

@client.slash_command(guild_ids=GUILDS, description=COMMANDS2['frog'])
async def frog(ctx:ApplicationContext): await ctx.respond(f'http://www.allaboutfrogs.org/funstuff/random/{"{:04d}".format(random.choice(range(1, 55)))}.jpg')

# RUN

client.run(getenv("FUNNY_KEY")) # Run client